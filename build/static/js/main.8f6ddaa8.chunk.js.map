{"version":3,"sources":["components/ListItemFilmStar.js","components/DropDown.js","components/NavBar.js","components/List.js","components/CountryFilmStar.js","components/SingleNavBar.js","components/ChartBar.js","components/FilmStar.js","components/MainScreen.js","App.js","reportWebVitals.js","index.js"],"names":["ListItemFilmStar","listTheme","createMuiTheme","typography","subtitle2","fontWeight","display","this","props","info","id","shortName","image","country","features","allowWithBeard","JSON","stringify","withBeard","allowWearGlasses","wearGlasses","searchText","length","toUpperCase","indexOf","gridrow","rowCount","ThemeProvider","theme","Grid","container","style","backgroundColor","spacing","alignItems","justify","item","xs","lg","Box","component","Typography","variant","src","border","width","height","alt","to","Button","color","Component","DropDown","updateFilter","handleCheckboxChange","updateAction","dropdown","value","onChange","ref","NavBar","filterList","textRef","current","createRef","AppBar","position","Toolbar","href","TextField","label","size","inputRef","List","state","statename","setState","showFilmStars","filmStars","direction","Fragment","Object","keys","map","filmStar","classname","CountryFilmStar","countryTheme","subtitle1","SingleNavBar","align","ChartBar","inData","data","indexBy","margin","top","right","bottom","left","padding","groupMode","valueScale","type","indexScale","round","colors","scheme","defs","background","stagger","rotation","lineWidth","fill","match","borderColor","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","from","modifiers","animate","motionStiffness","motionDamping","FilmStar","showFilmStar","allFilmStars","displayFilmStar","countryfilmStars","filter","detailTheme","fullName","gender","numAward","netWorth","formatData","totalFilms","description","i","outDataSet","outData","push","MainScreen","getFilmStars","axios","get","then","res","exact","path","render","fID","location","pathname","split","withRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f6ddaa8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Grid, Box, Typography, ThemeProvider, createMuiTheme} from '@material-ui/core';\r\nclass ListItemFilmStar extends Component {\r\n    \r\n\r\n    \r\n\r\n    render() {\r\n         const listTheme = createMuiTheme({\r\n             typography: {\r\n               \r\n               subtitle2: {\r\n                fontWeight: 600,\r\n                display: \"inline\"\r\n               },\r\n\r\n             }\r\n        })            \r\n        const {id,shortName, image,country,features} = this.props.info;\r\n        if(this.props.allowWithBeard!==\"both\" && this.props.allowWithBeard!== JSON.stringify(features.withBeard)) return(<></>);\r\n        if(this.props.allowWearGlasses!==\"both\" && this.props.allowWearGlasses!== JSON.stringify(features.wearGlasses)) return(<></>);\r\n        if(this.props.searchText.length>0 && shortName.toUpperCase().indexOf(this.props.searchText.toUpperCase())<0)return(<></>);\r\n        let gridrow=\"\";\r\n        if(this.props.rowCount%2 === 0)\r\n            gridrow=\"#FFF\";\r\n        else\r\n            gridrow = \"#DCDCDC\";\r\n        \r\n       const imagestyles = {\r\n            border: '5px solid #000', \r\n       };        \r\n        \r\n        return ( \r\n            <ThemeProvider theme={listTheme}>\r\n            <Grid container\r\n                style={{ backgroundColor: gridrow }}\r\n                spacing={0}\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item  xs={12} lg={2}>\r\n                    <Box component=\"span\" display={{ xs: 'inline', lg: 'none' }} >\r\n                        <Typography variant=\"subtitle2\">\r\n                            Short Name: \r\n                         </Typography>                       \r\n                    </Box>\r\n                    <Typography  variant=\"body1\">\r\n                        {shortName}\r\n                    </Typography>                           \r\n                </Grid>   \r\n                <Grid item  xs={12} lg={2}>\r\n                    <Box component=\"span\" display={{ xs: 'inline', lg: 'none' }} >\r\n                        <Typography variant=\"subtitle2\">\r\n                            Country: \r\n                         </Typography>                       \r\n                    </Box>                \r\n                    <Typography  variant=\"body1\">\r\n                    {country}\r\n                    </Typography>   \r\n                </Grid>\r\n                <Grid item  xs={12} lg={2}>\r\n                    <Box component=\"span\" display={{ xs: 'inline', lg: 'none' }} >\r\n                        <Typography variant=\"subtitle2\">\r\n                            With Beard: \r\n                         </Typography>                       \r\n                    </Box>                \r\n                    <Typography  variant=\"body1\">\r\n                    {JSON.stringify(features.withBeard)}\r\n                    </Typography>   \r\n                </Grid>\r\n                <Grid item  xs={12} lg={2}>\r\n                    <Box component=\"span\" display={{ xs: 'inline', lg: 'none' }} >\r\n                        <Typography variant=\"subtitle2\">\r\n                            Wear Glasses: \r\n                         </Typography>                       \r\n                    </Box>                \r\n                    <Typography  variant=\"body1\">\r\n                    {JSON.stringify(features.wearGlasses)}\r\n                    </Typography>   \r\n                </Grid>\r\n                <Grid item  xs={12} lg={2}>\r\n                    <Box component=\"span\" display={{ xs: 'inline', lg: 'none' }} >\r\n                        <Typography variant=\"subtitle2\">\r\n                            Image: \r\n                         </Typography>                       \r\n                    </Box>                \r\n                    <img src={process.env.PUBLIC_URL + '/img/'+image} style={imagestyles} width=\"150\" height=\"150\" alt=\"FilmStar\" />\r\n                </Grid>    \r\n                <Grid item  xs={12} lg={2}>\r\n                <Link to={`/${id}`}>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    <Typography  variant=\"body1\">\r\n                        Detail\r\n                    </Typography>       \r\n                </Button>\r\n                  </Link>                \r\n                </Grid>    \r\n\r\n            </Grid>\r\n            </ThemeProvider>\r\n         );\r\n    }\r\n}\r\nexport default ListItemFilmStar;","import React, { Component } from 'react';\r\n\r\nclass DropDown extends Component {\r\n    \r\n    updateFilter = () => {\r\n    this.props.handleCheckboxChange(this.props.updateAction, this.dropdown.value);   \r\n    }\r\n    render() {\r\n        \r\n        return(\r\n        \r\n        <select id={this.props.id} onChange={this.updateFilter}  ref={(ref) => this.dropdown = ref} >\r\n           <option value=\"both\">Both</option>\r\n           <option value=\"true\">Yes</option>\r\n           <option value=\"false\">No</option>\r\n        </select> \r\n     )\r\n    }\r\n    \r\n}\r\nexport default DropDown;","import React, { Component, createRef } from 'react';\r\nimport DropDown from './DropDown';\r\nimport {AppBar,Toolbar,Typography,Grid, TextField} from '@material-ui/core';\r\nclass NavBar extends Component {\r\n    \r\n      constructor(props) {\r\n        super(props);\r\n        this.textRef = createRef();\r\n      }    \r\n    updateFilter = () => {\r\n        this.props.filterList(\"searchText\", this.textRef.current.value);   \r\n        \r\n    }    \r\n    render() {\r\n        return(\r\n            <AppBar position=\"sticky\">\r\n              <Toolbar>\r\n                    <Grid container\r\n                        spacing={0}\r\n                        alignItems=\"center\"\r\n                        justify=\"left\"\r\n                    >                \r\n                        <Grid item  xs={12} lg={3}>\r\n                            <Typography variant=\"h6\">\r\n                                Film Stars Information Demo\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                                data source json:<a href=\"https://papatekken.github.io/json/filmStarData.json\" >here</a>\r\n                            </Typography>                            \r\n                        </Grid>\r\n                        <Grid item  xs={12} lg={2}>\r\n                            <Typography variant=\"subtitle1\">\r\n                                With Beard: <DropDown id={\"filterWithBeard\"} handleCheckboxChange={this.props.filterList} updateAction={\"allowWithBeard\"}/>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item  xs={12} lg={2}>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Wear Glasses: <DropDown id={\"filterWearGlasses\"} handleCheckboxChange={this.props.filterList}  updateAction={\"allowWearGlasses\"}/>\r\n                            </Typography>          \r\n                        </Grid>\r\n                        <Grid item  xs={12} lg={5}>\r\n                            <Typography variant=\"subtitle1\" display=\"inline\">\r\n                                Name: \r\n                            </Typography>\r\n                            \r\n                                <TextField id=\"filterShortName\" label=\"\" size=\"small\"  onChange={this.updateFilter} inputRef={this.textRef} />\r\n                            \r\n                        </Grid>    \r\n                    </Grid>    \r\n              </Toolbar>\r\n            </AppBar>        \r\n     )\r\n    }\r\n    \r\n}\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport ListItemFilmStar from './ListItemFilmStar';\r\nimport NavBar from './NavBar';\r\nimport {Box, Grid, Typography} from '@material-ui/core';\r\n\r\nclass List  extends Component{\r\n    state = {  \r\n        allowWithBeard : 'both',\r\n        allowWearGlasses : 'both',\r\n        searchText : '',\r\n    }    \r\n  \r\n    filterList= (statename, value)=>{\r\n        if(statename==='allowWithBeard'){\r\n             this.setState({allowWithBeard: value}) ;\r\n        }\r\n        if(statename==='allowWearGlasses')\r\n                 this.setState({allowWearGlasses:value}); \r\n        if(statename==='searchText'){\r\n                 this.setState({searchText:value});          \r\n        }\r\n    }\r\n\r\n    showFilmStars = () => {\r\n        const filmStars = this.props.filmStars;\r\n        let rowCount = 1;\r\n            \r\n        if (filmStars.length === 0)\r\n            return (<></>)       \r\n        return (\r\n            <>\r\n                \r\n                <Grid container\r\n                    id = \"filmStarContainer\"\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    <Box display={{ xs: 'none', lg: 'block' }} style={{ backgroundColor: \"#000\",color:\"#FFF\"}}>\r\n                    <Grid container  \r\n                        style={{ backgroundColor: \"#000\",color:\"#FFF\"}}\r\n                        spacing={0}\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                    >\r\n                        <Grid item   lg={2} > \r\n                            <Typography variant=\"h6\">\r\n                                Short Name\r\n                             </Typography>   \r\n                        </Grid>   \r\n                        <Grid item   lg={2} >\r\n                            <Typography variant=\"h6\">\r\n                                Country\r\n                            </Typography>       \r\n                        </Grid>\r\n                        <Grid item   lg={2} >\r\n                            <Typography variant=\"h6\">\r\n                                With Beard\r\n                            </Typography>       \r\n                        </Grid>\r\n                        <Grid item   lg={2} >\r\n                            <Typography variant=\"h6\">\r\n                                Wear Glasses\r\n                            </Typography>       \r\n                        </Grid>\r\n                        <Grid item   lg={2} display={{ xs: 'none', lg: 'block'}}>\r\n                            <Typography variant=\"h6\">\r\n                                Image\r\n                            </Typography>       \r\n                        </Grid>    \r\n                        <Grid item  lg={2}  >\r\n                        </Grid>    \r\n\r\n                    </Grid>                    \r\n                    </Box>\r\n                    <React.Fragment>\r\n                        {Object.keys(filmStars).map(filmStar =>(\r\n                            <ListItemFilmStar info={this.props.filmStars[filmStar]} allowWithBeard={this.state.allowWithBeard} allowWearGlasses={this.state.allowWearGlasses} searchText={this.state.searchText} rowCount={rowCount++} />\r\n                        ) )}\r\n                    </React.Fragment>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n \r\n    render() { \r\n        return ( \r\n                <div classname=\"filmStar_list\">\r\n                    <NavBar filterList={this.filterList}/>\r\n                    {this.showFilmStars() }\r\n                </div>\r\n \r\n \r\n         );\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Grid, Typography, ThemeProvider, createMuiTheme} from '@material-ui/core';\r\n\r\nclass CountryFilmStar extends Component {\r\n    \r\n\r\n    showFilmStars = () => {\r\n        const filmStars = this.props.filmStars;\r\n        if(filmStars ==null)\r\n            return  (<></>)  \r\n        if (filmStars.length === 0)\r\n            return (<></>)  \r\n                \r\n        const countryTheme = createMuiTheme({\r\n             typography: {\r\n               \r\n               subtitle1: {\r\n                fontWeight: 600,\r\n                display: \"inline\"\r\n               },\r\n               subtitle2: {\r\n                display: \"inline\"\r\n               },\r\n             },\r\n\r\n             \r\n        })         \r\n        \r\n        return (\r\n                <ThemeProvider theme={countryTheme}>\r\n                <Grid container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                        <Grid container\r\n                            spacing={0}\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                        >            \r\n                        <Grid item   xs={12} lg={8 } style={{border: '2px solid #C0C0C0'}}>\r\n                            <Typography variant=\"subtitle1\">Film stars in same country:</Typography>\r\n                            <Grid container\r\n                                spacing={0}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                            >               \r\n                            <React.Fragment>\r\n                                {Object.keys(filmStars).map(filmStar =>(\r\n                                <Grid item   xs={3} >\r\n                                    <Link to={\"/\"+this.props.filmStars[filmStar].id}>\r\n                                    <Typography variant=\"subtitle2\">\r\n                                        {this.props.filmStars[filmStar].shortName}\r\n                                    </Typography>    \r\n                                    </Link>   \r\n                                </Grid>\r\n                                ) )}\r\n                            </React.Fragment>\r\n                            </Grid>\r\n                        </Grid>\r\n                        </Grid>\r\n                </Grid>\r\n                 </ThemeProvider>\r\n        )\r\n    }\r\n \r\n    render() { \r\n        return ( \r\n                <div classname=\"filmStar_list\">\r\n                    {this.showFilmStars() }\r\n                </div>\r\n         );\r\n    }\r\n}\r\nexport default CountryFilmStar;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AppBar,Toolbar,Typography,Grid,Button} from '@material-ui/core';\r\nclass SingleNavBar extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <AppBar position=\"sticky\">\r\n              <Toolbar>\r\n                <Grid container\r\n                    spacing={0}\r\n                    alignItems=\"center\"\r\n                    justify=\"left\"\r\n                >                        \r\n                        <Grid item xs={6} >\r\n                            <Typography variant=\"h6\">\r\n                                Film Stars Information Demo\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                                data source json:<a href=\"https://papatekken.github.io/json/filmStarData.json\" >here</a>\r\n                            </Typography>\r\n                        </Grid>\r\n             \r\n                        <Grid item  xs={6}  align=\"right\">\r\n                            <Typography variant=\"h6\">\r\n                                <Link to={`/`}><Button variant=\"contained\" color=\"secondary\"> Back to List</Button></Link>\r\n                            </Typography>\r\n                        </Grid>    \r\n                </Grid>    \r\n              </Toolbar>\r\n            </AppBar>        \r\n     )\r\n    }\r\n    \r\n}\r\nexport default SingleNavBar;","import React from \"react\"\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\n\r\nconst ChartBar = ({inData}) => {\r\nreturn(\r\n  <div >\r\n    \r\n    <div style={{ height: \"400px\" }}>\r\n        <ResponsiveBar\r\n            data={inData}\r\n            keys={[\"publications\"]}\r\n            indexBy=\"year\"\r\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n            padding={0.3}\r\n            groupMode=\"grouped\"\r\n            valueScale={{ type: 'linear' }}\r\n            indexScale={{ type: 'band', round: true }}\r\n            colors={{ scheme: 'category10' }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'inherit',\r\n                    color: '#38bcb2',\r\n                    size: 4,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: '#eed312',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'fries'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'sandwich'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            borderColor={{ theme: 'background' }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'Year',\r\n                legendPosition: 'middle',\r\n                legendOffset: 32\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'Total Publications',\r\n                legendPosition: 'middle',\r\n                legendOffset: -40\r\n            }}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            animate={true}\r\n            motionStiffness={90}\r\n            motionDamping={15}            \r\n        />\r\n    </div>\r\n  </div>\r\n)  \r\n}\r\n  \r\n  \r\nexport default ChartBar","import React, { Component } from 'react';\r\nimport CountryFilmStar from './CountryFilmStar';\r\nimport SingleNavBar from './SingleNavBar';\r\nimport ChartBar from './ChartBar';\r\nimport {Grid, Typography, ThemeProvider, createMuiTheme} from '@material-ui/core';\r\n\r\n\r\nclass FilmStar  extends Component{\r\n    \r\n    formatData(inData){\r\n\t\tlet outDataSet = [];\r\n\t\tlet outData = [];        \r\n        let i;\r\n        for (i = 0; i < inData.length; i++) {\r\n            outData=[];\r\n            outData['year']= inData[i][0];\r\n            outData['publications']= inData[i][1];\r\n            outDataSet.push(outData);\r\n        }\r\n\r\n        return outDataSet;\r\n    }\r\n\r\n    \r\n    showFilmStar = () => {\r\n\r\n        const filmStars = this.props.allFilmStars;\r\n        const displayFilmStar = this.props.displayFilmStar;\r\n        \r\n        const countryfilmStars = filmStars.filter(function(item){\r\n            return item.country === displayFilmStar[0].country && item.id!== displayFilmStar[0].id;\r\n        }); \r\n        \r\n        const detailTheme = createMuiTheme({\r\n             typography: {\r\n               \r\n               subtitle1: {\r\n                fontWeight: 600,\r\n                display: \"inline\"\r\n               },\r\n               subtitle2: {\r\n                display: \"inline\"\r\n               },\r\n             },\r\n\r\n             \r\n        })              \r\n        return(\r\n         \r\n            displayFilmStar.map(filmStar =>( \r\n                <>\r\n                <ThemeProvider theme={detailTheme}>\r\n                <Grid container\r\n                    id = \"filmStarContainer\"\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"stretch\"\r\n                >                \r\n                    <Grid container \r\n                        spacing={0}\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        \r\n                    >                \r\n                        <Grid item xs={12} lg={4}   >\r\n                            <Grid container \r\n                                spacing={0}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                \r\n                            >                                \r\n                        \r\n                                <Grid item   xs={12}  >\r\n                                <Typography variant=\"subtitle2\">\r\n                                ID :\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.id}\r\n                                </Typography>\r\n                                </Grid>\r\n                                <Grid item   xs={12}  >\r\n                                <Typography variant=\"subtitle2\">\r\n                                Short Name :\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.shortName}\r\n                                </Typography>\r\n                                </Grid>                                \r\n                                <Grid item   xs={12}  >\r\n                                <Typography variant=\"subtitle2\">\r\n                                Full Name :\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.fullName}\r\n                                </Typography>\r\n                                </Grid>                                \r\n                                <Grid item   xs={12}  >\r\n                                <Typography variant=\"subtitle2\">\r\n                                Gender :\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.gender}\r\n                                </Typography>\r\n                                </Grid>  \r\n                                <Grid item   xs={12}  >\r\n                                <Typography variant=\"subtitle2\">\r\n                                Country :\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.country}\r\n                                </Typography>\r\n                                </Grid>      \r\n                                <Grid item  xs={6}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                With Beard?\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {JSON.stringify(filmStar.features.withBeard)}\r\n                                </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <Typography variant=\"subtitle2\">\r\n                                Total Awards:\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.numAward}\r\n                                </Typography>\r\n                                </Grid>  \r\n                                <Grid item  xs={6}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                With Glasses?\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {JSON.stringify(filmStar.features.wearGlasses)}\r\n                                </Typography>                              \r\n\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                <Typography variant=\"subtitle2\">\r\n                                Total netWorth:\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                {filmStar.netWorth}\r\n                                </Typography>\r\n                                </Grid>                                    \r\n                            </Grid>    \r\n                        </Grid>\r\n                        <Grid item   xs={12} lg={4}  >\r\n                            <Grid container \r\n                                spacing={0}\r\n                                alignItems=\"center\"\r\n                                justify=\"center\"\r\n                                \r\n                            >                                \r\n                        \r\n                                <Grid item   xs={12}  >                        \r\n                                    <img src={process.env.PUBLIC_URL + '/img/' +filmStar.image} width=\"150\" height=\"150\" alt=\"FilmStar\"/>\r\n                                </Grid>                                  \r\n                            </Grid>                                      \r\n                        </Grid>\r\n                        <Grid item   xs={6} lg={8} >\r\n                            <ChartBar inData={this.formatData(filmStar.totalFilms)}/>\r\n                        </Grid>                                            \r\n                        \r\n                        <Grid item   xs={12} lg={8 } style={{border: '2px solid #C0C0C0'}}>\r\n                            <Typography variant=\"subtitle1\">\r\n                            <div>\r\n                            Description:\r\n                            </div>\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                            {filmStar.description}\r\n                            </Typography>\r\n                        </Grid>    \r\n       \r\n                    </Grid>\r\n                </Grid>\r\n                </ThemeProvider>\r\n                <CountryFilmStar filmStars={countryfilmStars}/>\r\n                </>    \r\n            ))             \r\n            \r\n        \r\n        \r\n        )\r\n    }\r\n    render() { \r\n     \r\n\r\n        return (\r\n            \r\n\r\n            <div classname=\"filmStar_list\">\r\n                <SingleNavBar />\r\n                {this.showFilmStar() }\r\n                \r\n            </div>            \r\n         \r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmStar;","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport List from './List';\r\nimport FilmStar from './FilmStar';\r\nimport axios from 'axios';\r\n\r\n\r\nclass MainScreen extends Component {\r\n    state = {  \r\n        filmStars: [],\r\n        \r\n    }\r\n \r\n    componentDidMount() {\r\n        this.getFilmStars();\r\n    }\r\n\r\n    getFilmStars = () => {\r\n        axios.get(`https://papatekken.github.io/json/filmStarData.json`)\r\n             .then( res => {\r\n                 this.setState({\r\n                     filmStars: res.data\r\n                 }) \r\n             })\r\n    }    \r\n    \r\n    \r\n    render() { \r\n        \r\n        return (\r\n        \r\n            <BrowserRouter>        \r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <List filmStars={this.state.filmStars}/>\r\n                    </Route>\r\n\r\n                    <Route  path=\"/:filmStarId\" render={ (props) => {\r\n                        let fID = props.location.pathname.split('/');\r\n                        let displayFilmStar = this.state.filmStars.filter(function(item){ return item.id === fID[1]; });\r\n                        return(\r\n                            <FilmStar \r\n                               allFilmStars = {this.state.filmStars} displayFilmStar = {displayFilmStar}\r\n                            />\r\n                        )                        \r\n                    }}>\r\n                       \r\n                    </Route>                    \r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(MainScreen);","import React, { Component } from 'react';\r\nimport MainScreen from './components/MainScreen';\r\n \r\n\r\nclass App extends Component {\r\n    \r\n       \r\n  render() {\r\n      \r\n    return (\r\n        <MainScreen />\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}